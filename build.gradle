buildscript {
    ext.kotlin_version = '1.6.10'

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

allprojects {
    group = "com.github.tarifchakder"

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
    }
}

ext {
    packageId = "com.tarif.kotlinhelper"
    versionName = "1.2.0"
    versionCode = 3
    compileSDK = 31
    minSDK = 16
    targetSDK = 31
    kotlinSDK = '1.7.0'
    kotlinx_version = '1.5.2'
    appcompat = '1.4.0'
    material = '1.4.0'
    constraintlayout = '2.1.2'
    coroutines_core = '1.5.2'
    lifecycle_runtime_ktx = '2.4.0'
}

subprojects {

    switch (it.name) {
        case "app":
            apply plugin: 'com.android.application'
            apply plugin: 'kotlin-android'
            apply plugin: 'kotlin-kapt'
            apply plugin: 'kotlin-parcelize'

            dependencies {
                implementation fileTree(dir: 'libs', include: ['*.jar'])
            }
            applyApplication(it, true)
            break

        case ["enums", "regex"]:
            apply plugin: 'java-library'
            apply plugin: 'kotlin'
            applyForLibrary(it)

            break

        default:
            //setup gradle for libraries
            apply plugin: 'com.android.library'
            apply plugin: 'kotlin-android'
            apply plugin: 'maven-publish'
            apply plugin: 'kotlin-parcelize'
            applyApplication(it, false)

            dependencies {
                implementation fileTree(dir: 'libs', include: ['*.jar'])
            }

            it.afterEvaluate {
                publishing {
                    publications {
                        release(MavenPublication) {
                            from components.release
                        }
                    }
                }
            }

            break
    }

}

def applyForLibrary(project) {

    project.java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    project.dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
}

def applyApplication(project, buildConfigCase) {
    project.android {
        compileSdkVersion rootProject.ext.compileSDK

        defaultConfig {
            minSdkVersion rootProject.ext.minSDK
            targetSdkVersion rootProject.ext.compileSDK
            versionCode rootProject.ext.versionCode
            versionName rootProject.ext.versionName
        }

        compileOptions {
            sourceCompatibility = JavaVersion.VERSION_11
            targetCompatibility = JavaVersion.VERSION_11
        }

        kotlinOptions {
            jvmTarget = 11
        }

        testOptions.unitTests {
            includeAndroidResources = true
        }

        buildFeatures {
            aidl = false
            renderScript = false
            resValues = false
            shaders = false
            buildConfig = buildConfigCase
        }

    }

}
